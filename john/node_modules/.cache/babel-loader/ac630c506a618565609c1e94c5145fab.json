{"ast":null,"code":"import _objectSpread from \"/Users/luwam/Desktop/themeforest-YVeu0JqC-john-react-landing-page-templates/john/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/luwam/Desktop/themeforest-YVeu0JqC-john-react-landing-page-templates/john/src/component/Form.js\";\n// import React from \"react\";\n// import emailjs from \"emailjs-com\";\n// class Form extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       errors: {\n//         name: \"\",\n//         subject: \"\",\n//         phone: \"\",\n//         email: \"\",\n//       },\n//     };\n//   }\n//   handleChange = (event) => {\n//     let name = event.target.name;\n//     let value = event.target.value;\n//     let errors = this.state.errors;\n//     switch (name) {\n//       case \"name\":\n//         errors.name = value.length === 0 ? \"Name is not empty\" : \"\";\n//         break;\n//       case \"subject\":\n//         errors.subject = value.length < 5 ? \"Subject must be 5 characters\" : \"\";\n//         break;\n//       case \"phone\":\n//         errors.phone = value.length < 5 ? \"phone is not empty\" : \"\";\n//         break;\n//       case \"email\":\n//         errors.email = value.length < 5 ? \"Subject is not empty\" : \"\";\n//         let appos = value.indexOf(\"@\");\n//         let dots = value.lastIndexOf(\".\");\n//         if (appos < 1 || dots - appos < 2) {\n//           errors.email = \"please enter valid email\";\n//         }\n//         break;\n//       default:\n//         break;\n//     }\n//     this.setState({ errors, [name]: value });\n//   };\n//   submitHandler = (e) => {\n//     e.preventDefault();\n//     // if (\n//     //   this.state.errors.name.length === 0 &&\n//     //   this.state.errors.subject.length === 0 &&\n//     //   this.state.errors.phone.length === 0 &&\n//     //   this.state.errors.email.length === 0\n//     // ) {\n//     //   alert(\"form is valid\");\n//     // } else {\n//     //   alert(\"form is invalid\");\n//     // }\n//     emailjs\n//       .sendForm(\n//         \"gmail\",\n//         \"template_zo1q2mh\",\n//         e.target,\n//         \"user_vvQtVRIgqRETJC2JHOJz9\"\n//       )\n//       .then(\n//         (result) => {\n//           console.log(result.text);\n//           alert(\"form is valid\");\n//         },\n//         (error) => {\n//           console.log(error.text);\n//           alert(\"form is invalid\");\n//         }\n//       );\n//   };\n//   render() {\n//     const { errors } = this.state;\n//     return (\n//       <form onSubmit={this.submitHandler.bind(this)} className=\"form_class\">\n//         <div className=\"row\">\n//           <div className=\"col-lg-6\">\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               name=\"name\"\n//               className=\"form-control\"\n//               placeholder=\"Your Name*\"\n//               onChange={this.handleChange}\n//             />\n//             <p>{errors.name}</p>\n//           </div>\n//           <div className=\"col-lg-6\">\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               id=\"email\"\n//               name=\"email\"\n//               placeholder=\"Your Email*\"\n//               onChange={this.handleChange}\n//             />\n//             <p>{errors.email}</p>\n//           </div>\n//           <div className=\"col-lg-6\">\n//             <input\n//               type=\"text\"\n//               id=\"subject\"\n//               name=\"subject\"\n//               className=\"form-control\"\n//               placeholder=\"Subject*\"\n//               onChange={this.handleChange}\n//             />\n//             <p>{errors.subject}</p>\n//           </div>\n//           <div className=\"col-lg-6\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               id=\"phone\"\n//               name=\"phone\"\n//               placeholder=\"Phone*\"\n//               onChange={this.handleChange}\n//             />\n//             <p>{errors.phone}</p>\n//           </div>\n//         </div>\n//         <textarea\n//           name=\"message\"\n//           id=\"message\"\n//           className=\"form-control\"\n//           rows=\"6\"\n//           placeholder=\"Your Message ...\"\n//           onChange={this.handleChange}\n//         ></textarea>\n//         <button type=\"submit\" className=\"btn send_btn theme_btn\">\n//           Send Message\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n// export default Form;\nimport React from \"react\";\nimport axios from \"axios\";\nconst URL = `https://6xb56qb1j5.execute-api.us-east-1.amazonaws.com/v1/contact`;\nconst initialError = {\n  nameError: \"\",\n  subjectError: \"\",\n  emailError: \"\",\n  messageError: \"\"\n};\nconst initialData = {\n  name: \"\",\n  subject: \"\",\n  phone: \"\",\n  email: \"\",\n  content: \"\"\n};\nconst successMessage = \"Request sent successfully\";\nconst failedMessage = \"Failed ,try again\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: _objectSpread({}, initialError),\n      data: _objectSpread({}, initialData)\n    };\n\n    this.handleChange = event => {\n      const copy = _objectSpread({}, this.state.data, {\n        [event.target.name]: event.target.value\n      });\n\n      this.setState({\n        data: copy\n      });\n    };\n\n    this.validationInput = () => {\n      const nameError = this.state.data.name ? \"\" : \"Name is required\";\n      const emailError = this.state.data.email ? \"\" : \"Email is required\";\n      const subjectError = this.state.data.subject ? \"\" : \"Subject is required\";\n      const messageError = this.state.data.content ? \"\" : \"Message is required\";\n\n      const copy = _objectSpread({}, this.state.errors, {\n        nameError,\n        emailError,\n        subjectError,\n        messageError\n      });\n\n      this.setState({\n        errors: copy\n      });\n    };\n\n    this.submitHandler = async e => {\n      e.preventDefault();\n      this.validationInput();\n\n      if (this.state.data.name && this.state.data.email && this.state.data.subject && this.state.data.content) {\n        const response = await axios.post(URL, this.state.data);\n        console.log(response.data);\n        const resp = response.data === \"Success\" ? successMessage : failedMessage;\n\n        if (resp === successMessage) {\n          this.setState({\n            data: _objectSpread({}, initialData)\n          });\n        }\n\n        alert(resp);\n      }\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"form_class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.data.name,\n      className: \"form-control\",\n      placeholder: \"Your Name*\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, errors.nameError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"email\",\n      name: \"email\",\n      value: this.state.data.email,\n      placeholder: \"Your Email*\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, errors.emailError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"subject\",\n      name: \"subject\",\n      className: \"form-control\",\n      value: this.state.data.subject,\n      placeholder: \"Subject*\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, errors.subjectError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"phone\",\n      name: \"phone\",\n      placeholder: \"Phone\",\n      value: this.state.data.phone,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"content\",\n      id: \"message\",\n      className: \"form-control\",\n      rows: \"6\",\n      placeholder: \"Your Message ...\",\n      value: this.state.data.content,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, errors.messageError), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn send_btn theme_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, \"Send Message\"));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/luwam/Desktop/themeforest-YVeu0JqC-john-react-landing-page-templates/john/src/component/Form.js"],"names":["React","axios","URL","initialError","nameError","subjectError","emailError","messageError","initialData","name","subject","phone","email","content","successMessage","failedMessage","Form","Component","state","errors","data","handleChange","event","copy","target","value","setState","validationInput","submitHandler","e","preventDefault","response","post","console","log","resp","alert","render","color"],"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","sourcesContent":["// import React from \"react\";\r\n// import emailjs from \"emailjs-com\";\r\n\r\n// class Form extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       errors: {\r\n//         name: \"\",\r\n//         subject: \"\",\r\n//         phone: \"\",\r\n//         email: \"\",\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (event) => {\r\n//     let name = event.target.name;\r\n//     let value = event.target.value;\r\n//     let errors = this.state.errors;\r\n\r\n//     switch (name) {\r\n//       case \"name\":\r\n//         errors.name = value.length === 0 ? \"Name is not empty\" : \"\";\r\n//         break;\r\n//       case \"subject\":\r\n//         errors.subject = value.length < 5 ? \"Subject must be 5 characters\" : \"\";\r\n//         break;\r\n//       case \"phone\":\r\n//         errors.phone = value.length < 5 ? \"phone is not empty\" : \"\";\r\n//         break;\r\n//       case \"email\":\r\n//         errors.email = value.length < 5 ? \"Subject is not empty\" : \"\";\r\n//         let appos = value.indexOf(\"@\");\r\n//         let dots = value.lastIndexOf(\".\");\r\n\r\n//         if (appos < 1 || dots - appos < 2) {\r\n//           errors.email = \"please enter valid email\";\r\n//         }\r\n\r\n//         break;\r\n\r\n//       default:\r\n//         break;\r\n//     }\r\n//     this.setState({ errors, [name]: value });\r\n//   };\r\n\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     // if (\r\n//     //   this.state.errors.name.length === 0 &&\r\n//     //   this.state.errors.subject.length === 0 &&\r\n//     //   this.state.errors.phone.length === 0 &&\r\n//     //   this.state.errors.email.length === 0\r\n//     // ) {\r\n//     //   alert(\"form is valid\");\r\n//     // } else {\r\n//     //   alert(\"form is invalid\");\r\n//     // }\r\n//     emailjs\r\n//       .sendForm(\r\n//         \"gmail\",\r\n//         \"template_zo1q2mh\",\r\n//         e.target,\r\n//         \"user_vvQtVRIgqRETJC2JHOJz9\"\r\n//       )\r\n//       .then(\r\n//         (result) => {\r\n//           console.log(result.text);\r\n//           alert(\"form is valid\");\r\n//         },\r\n//         (error) => {\r\n//           console.log(error.text);\r\n//           alert(\"form is invalid\");\r\n//         }\r\n//       );\r\n//   };\r\n\r\n//   render() {\r\n//     const { errors } = this.state;\r\n//     return (\r\n//       <form onSubmit={this.submitHandler.bind(this)} className=\"form_class\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-6\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"name\"\r\n//               name=\"name\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Your Name*\"\r\n//               onChange={this.handleChange}\r\n//             />\r\n//             <p>{errors.name}</p>\r\n//           </div>\r\n//           <div className=\"col-lg-6\">\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"form-control\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               placeholder=\"Your Email*\"\r\n//               onChange={this.handleChange}\r\n//             />\r\n//             <p>{errors.email}</p>\r\n//           </div>\r\n//           <div className=\"col-lg-6\">\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"subject\"\r\n//               name=\"subject\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Subject*\"\r\n//               onChange={this.handleChange}\r\n//             />\r\n//             <p>{errors.subject}</p>\r\n//           </div>\r\n//           <div className=\"col-lg-6\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               id=\"phone\"\r\n//               name=\"phone\"\r\n//               placeholder=\"Phone*\"\r\n//               onChange={this.handleChange}\r\n//             />\r\n//             <p>{errors.phone}</p>\r\n//           </div>\r\n//         </div>\r\n//         <textarea\r\n//           name=\"message\"\r\n//           id=\"message\"\r\n//           className=\"form-control\"\r\n//           rows=\"6\"\r\n//           placeholder=\"Your Message ...\"\r\n//           onChange={this.handleChange}\r\n//         ></textarea>\r\n//         <button type=\"submit\" className=\"btn send_btn theme_btn\">\r\n//           Send Message\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Form;\r\n\r\n\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nconst URL = `https://6xb56qb1j5.execute-api.us-east-1.amazonaws.com/v1/contact`;\r\nconst initialError = {\r\n  nameError: \"\",\r\n  subjectError: \"\",\r\n  emailError: \"\",\r\n  messageError: \"\"\r\n};\r\nconst initialData = {\r\n  name: \"\",\r\n  subject: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  content: \"\"\r\n};\r\nconst successMessage=\"Request sent successfully\"\r\nconst failedMessage=\"Failed ,try again\"\r\nclass Form extends React.Component {\r\n  state = {\r\n    errors: { ...initialError },\r\n    data: { ...initialData }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const copy = {\r\n      ...this.state.data,\r\n      [event.target.name]: event.target.value\r\n    };\r\n    this.setState({ data: copy });\r\n  };\r\n  validationInput = () => {\r\n    const nameError = this.state.data.name ? \"\" : \"Name is required\";\r\n    const emailError = this.state.data.email ? \"\" : \"Email is required\";\r\n    const subjectError = this.state.data.subject ? \"\" : \"Subject is required\";\r\n    const messageError = this.state.data.content ? \"\" : \"Message is required\";\r\n    const copy = {\r\n      ...this.state.errors,\r\n      nameError,\r\n      emailError,\r\n      subjectError,\r\n      messageError\r\n    };\r\n    this.setState({ errors: copy });\r\n  };\r\n  submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    this.validationInput();\r\n    if (\r\n      this.state.data.name &&\r\n      this.state.data.email &&\r\n      this.state.data.subject &&\r\n      this.state.data.content\r\n    ) {\r\n      const response = await axios.post(URL, this.state.data);\r\n      console.log(response.data)\r\n      const resp = response.data === \"Success\"\r\n          ? successMessage\r\n          : failedMessage;\r\n      if(resp===successMessage){\r\n       this.setState({data:{...initialData}})\r\n      }\r\n       alert(resp);\r\n    }\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler} className=\"form_class\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={this.state.data.name}\r\n              className=\"form-control\"\r\n              placeholder=\"Your Name*\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <p style={{ color: \"red\" }}>{errors.nameError}</p>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={this.state.data.email}\r\n              placeholder=\"Your Email*\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <p style={{ color: \"red\" }}>{errors.emailError}</p>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              className=\"form-control\"\r\n              value={this.state.data.subject}\r\n              placeholder=\"Subject*\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <p style={{ color: \"red\" }}>{errors.subjectError}</p>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Phone\"\r\n              value={this.state.data.phone}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <textarea\r\n          name=\"content\"\r\n          id=\"message\"\r\n          className=\"form-control\"\r\n          rows=\"6\"\r\n          placeholder=\"Your Message ...\"\r\n          value={this.state.data.content}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <p style={{ color: \"red\" }}>{errors.messageError}</p>\r\n        <button type=\"submit\" className=\"btn send_btn theme_btn\">\r\n          Send Message\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}